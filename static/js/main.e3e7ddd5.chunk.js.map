{"version":3,"sources":["n1-main/m1-ui/u1-common/SuperInputText/SuperInputText.module.css","n1-main/m1-ui/u1-common/SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/u1-common/SuperButton/SuperButton.module.css","n2-features/f3-error404/ErrorPage.tsx","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f2-profile/Profile.tsx","n2-features/f1-auth/a2-register/Register.tsx","n2-features/f1-auth/a3-recovery/Recovery.tsx","n2-features/f1-auth/a4-newPassword/NewPassword.tsx","n1-main/m1-ui/u1-common/SuperInputText/SuperInputText.tsx","n1-main/m1-ui/u1-common/SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/u1-common/SuperButton/SuperButton.tsx","n2-features/f0-test/TestPage.tsx","n1-main/m1-ui/u3-routes/Routes.tsx","n1-main/m1-ui/u2-header/Header.tsx","n1-main/m1-ui/App.tsx","reportWebVitals.ts","n1-main/m2-bll/reducers/app-reducer.ts","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","ErrorPage","style","textAlign","fontSize","MainContainer","styled","div","Login","ProfileContainer","Profile","RegisterContainer","Register","RecoveryContainer","Recovery","NewPasswordContainer","NewPassword","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","className","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperButton","red","finalClassName","default","TestPageContainer","TestPageChildrenContainer","TestPage","PATH","Routes","path","exact","render","from","to","HeaderContainer","Nav","nav","StyledLink","NavLink","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","app","state","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e3e7ddd5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2hGi2\",\"errorInput\":\"SuperInputText_errorInput__6Ytxa\",\"error\":\"SuperInputText_error__3foco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__35R1J\",\"spanClassName\":\"SuperCheckbox_spanClassName__358u0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__gXJTT\",\"red\":\"SuperButton_red__2IxsO\"};","import React from 'react';\r\n\r\n\r\nfunction ErrorPage() {\r\n    return (\r\n        <h1 style={{textAlign: 'center',fontSize: '50px'}}>404: PAGE NOT FOUND</h1>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;","import React from \"react\";\r\nimport styled from \"styled-components\"\r\n\r\nconst MainContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <MainContainer>\r\n            <h3>Login page</h3>\r\n        </MainContainer>\r\n    )\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\"\r\n\r\nconst ProfileContainer = styled.div`\r\n      display: flex;\r\n      justify-content: center;\r\n    `\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <ProfileContainer>\r\n            <h3>Profile page</h3>\r\n        </ProfileContainer>\r\n    )\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\"\r\n\r\nconst RegisterContainer = styled.div`\r\n      display: flex;\r\n      justify-content: center;\r\n    `\r\n\r\nexport const Register = () => {\r\n    return (\r\n        <RegisterContainer>\r\n            <h3>Registration page</h3>\r\n        </RegisterContainer>\r\n    )\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\"\r\n\r\nconst RecoveryContainer = styled.div`\r\n      display: flex;\r\n      justify-content: center;\r\n    `\r\n\r\nexport const Recovery = () => {\r\n    return (\r\n        <RecoveryContainer>\r\n            <h3>Recovery page</h3>\r\n        </RecoveryContainer>\r\n    )\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\"\r\n\r\nconst NewPasswordContainer = styled.div`\r\n      display: flex;\r\n      justify-content: center;\r\n    `\r\n\r\nexport const NewPassword = () => {\r\n    return (\r\n        <NewPasswordContainer>\r\n            <h3>NewPassword page</h3>\r\n        </NewPasswordContainer>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\"\r\nimport { StyledButton } from \"../../n1-main/m1-ui/u1-common/styles/Button\";\r\nimport SuperInputText from \"../../n1-main/m1-ui/u1-common/SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../n1-main/m1-ui/u1-common/SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../n1-main/m1-ui/u1-common/SuperButton/SuperButton\";\r\n\r\nconst TestPageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\nconst TestPageChildrenContainer = styled.div`\r\n`\r\n\r\nexport const TestPage = () => {\r\n    return (\r\n\r\n        <TestPageContainer>\r\n            <h3>Test Page</h3>\r\n            {/*<StyledButton>button</StyledButton>*/}\r\n            <TestPageChildrenContainer>\r\n                <SuperInputText/>\r\n                <SuperCheckbox/>\r\n                <SuperButton/>\r\n            </TestPageChildrenContainer>\r\n        </TestPageContainer>\r\n    )\r\n}","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport ErrorPage from \"../../../n2-features/f3-error404/ErrorPage\";\r\nimport {Login} from \"../../../n2-features/f1-auth/a1-login/Login\";\r\nimport {Profile} from \"../../../n2-features/f2-profile/Profile\";\r\nimport {Register} from \"../../../n2-features/f1-auth/a2-register/Register\";\r\nimport {Recovery} from \"../../../n2-features/f1-auth/a3-recovery/Recovery\";\r\nimport {NewPassword} from \"../../../n2-features/f1-auth/a4-newPassword/NewPassword\";\r\nimport {TestPage} from \"../../../n2-features/f0-test/TestPage\";\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REG: '/registration',\r\n    RECOVERY_PASSWORD: '/recoveryPassword',\r\n    NEW_PASSWORD: '/newPassword',\r\n    PROFILE: '/profile',\r\n    TEST: '/test'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Profile/>}/>\r\n                <Route path={PATH.LOGIN} exact render={() => <Login/>}/>\r\n                <Route path={PATH.REG} exact render={() => <Register/>}/>\r\n                <Route path={PATH.RECOVERY_PASSWORD} exact render={() => <Recovery/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} exact render={() => <NewPassword/>}/>\r\n                <Route path={PATH.PROFILE} exact render={() => <Profile/>}/>\r\n                <Route path={PATH.TEST} exact render={() => <TestPage/>}/>\r\n                <Route path={'/404'} render={() => <ErrorPage/>}/>\r\n                <Redirect from={'*'} to={'/404'}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport styled from \"styled-components\";\r\nimport {PATH} from \"../u3-routes/Routes\";\r\n\r\nconst HeaderContainer = styled.div`\r\n  height: 80px;\r\n  background-color: #9ac4ce;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`\r\nconst Nav = styled.nav`\r\n`\r\nconst StyledLink = styled(NavLink)`\r\n  color: black;\r\n  padding: 10px;\r\n  text-decoration: none;\r\n\r\n  &.active {\r\n    color: indianred;\r\n  }\r\n\r\n  &:hover {\r\n    color: white\r\n  }\r\n;\r\n`\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <HeaderContainer>\r\n            <Nav>\r\n                <StyledLink to={PATH.PROFILE}>Profile</StyledLink>\r\n                <StyledLink to={PATH.LOGIN}>Login</StyledLink>\r\n                <StyledLink to={PATH.REG}>Registration</StyledLink>\r\n                <StyledLink to={PATH.RECOVERY_PASSWORD}>Recovery Password</StyledLink>\r\n                <StyledLink to={PATH.NEW_PASSWORD}>Change Password</StyledLink>\r\n                <StyledLink to={PATH.TEST}>TEST page</StyledLink>\r\n            </Nav>\r\n        </HeaderContainer>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Header} from \"./u2-header/Header\";\r\nimport Routes from \"./u3-routes/Routes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header/>\r\n      <Routes/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {}\r\n\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    return state\r\n}\r\n\r\n\r\n//type\r\nexport type InitialStateType = typeof initialState\r\nexport type ActionsType = {}","import {applyMiddleware, combineReducers, createStore} from \"redux\"\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {ActionsType, appReducer} from \"./reducers/app-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\n\r\n// export type AppThunk<ReturnType = void> = ThunkAction<void,RootStateType,unknown,ActionsType>\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './n1-main/m1-ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}