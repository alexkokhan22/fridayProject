{"version":3,"sources":["main/ui/component/common/c1-SuperInputText/SuperInputText.module.css","main/ui/component/common/c2-SuperButton/SuperButton.module.css","main/ui/component/common/c3-SuperCheckbox/SuperCheckbox.module.css","main/ui/component/login/login.tsx","main/ui/component/registration/registration.tsx","main/ui/component/page404/page404.tsx","main/ui/component/passwordRecovery/passwordRecovery.tsx","main/ui/component/enteringNewPassword/enteringNewPassword.tsx","main/ui/component/profile/profile.tsx","main/ui/component/common/c2-SuperButton/SuperButton.tsx","main/ui/component/common/c3-SuperCheckbox/SuperCheckbox.tsx","main/ui/component/common/c1-SuperInputText/SuperInputText.tsx","main/ui/component/test/test.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Login","Registration","Page404","PasswordRecovery","EnteringNewPassword","Profile","SuperButton","red","className","restProps","finalClassName","s","default","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SuperInputText","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","errorInput","superInput","value","key","Test","App","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1baae07f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2qpMt\",\"errorInput\":\"SuperInputText_errorInput__15XhT\",\"error\":\"SuperInputText_error__1LolV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__JNtxO\",\"red\":\"SuperButton_red__Q1RLE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1o7Mo\",\"spanClassName\":\"SuperCheckbox_spanClassName__1YfaW\"};","import React from \"react\";\r\n\r\nexport const Login = () => {\r\n    return <div>login</div>\r\n}","import React from \"react\";\r\n\r\nexport const Registration = () => {\r\n    return <div>registration</div>\r\n}","import React from \"react\";\r\n\r\nexport const Page404 = () => {\r\n    return <div>404</div>\r\n}","import React from \"react\";\r\n\r\nexport const PasswordRecovery = () => {\r\n    return <div>passwordRecovery</div>\r\n}","import React from \"react\";\r\n\r\nexport const EnteringNewPassword = () => {\r\n    return <div>enteringNewPassword</div>\r\n}","import React from \"react\";\r\n\r\nexport const Profile = () => {\r\n    return <div>profile</div>\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React from \"react\";\r\nimport SuperButton from \"../common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperInputText from \"../common/c1-SuperInputText/SuperInputText\";\r\n\r\nexport const Test = () => {\r\n    return <div>\r\n        <SuperButton/>\r\n        <SuperCheckbox/>\r\n        <SuperInputText/>\r\n    </div>\r\n}","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport {Login} from \"./main/ui/component/login/login\";\nimport {Registration} from \"./main/ui/component/registration/registration\";\nimport {Page404} from \"./main/ui/component/page404/page404\";\nimport {PasswordRecovery} from \"./main/ui/component/passwordRecovery/passwordRecovery\";\nimport {EnteringNewPassword} from \"./main/ui/component/enteringNewPassword/enteringNewPassword\";\nimport {Profile} from \"./main/ui/component/profile/profile\";\nimport {Test} from './main/ui/component/test/test';\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Route path={'/login'} render={() => <Login/>}/>\n                <Route path={'/registration'} render={() => <Registration/>}/>\n                <Route path={'/page404'} render={() => <Page404/>}/>\n                <Route path={'/passwordRecovery'} render={() => <PasswordRecovery/>}/>\n                <Route path={'/enteringNewPassword'} render={() => <EnteringNewPassword/>}/>\n                <Route path={'/profile'} render={() => <Profile/>}/>\n                <Route path={'/test'} render={() => <Test/>}/>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}